(()=>{"use strict";class e{constructor(){this.coordinates=[{row:0,column:4,side:["top","left"]},{row:0,column:5,side:["top","right"]},{row:1,column:4,side:["bottom","left"]},{row:1,column:5,side:["bottom","right"]}],this.color="yellow"}moveDown(){this.coordinates.forEach((e=>{e.row++}))}moveRight(){this.coordinates.forEach((e=>{e.column++}))}moveLeft(){this.coordinates.forEach((e=>{e.column--}))}rotateRight(){}rotateLeft(){}validMoveRight(){return this.coordinates.filter((e=>e.side.includes("right"))).every((e=>{const{column:t}=e;return t+1<=9}))}validMoveLeft(){return this.coordinates.filter((e=>e.side.includes("left"))).every((e=>{const{column:t}=e;return t-1>=0}))}validMoveDown(e){return this.coordinates.filter((e=>e.side.includes("bottom"))).every((t=>{const{row:r,column:o}=t,i=r+1;if(i<=19)return"black"===e[i][o]}))}clearCoordinates(e){this.coordinates=this.coordinates.filter((t=>{const{row:r}=t;return!e.includes(r)}))}}class t{constructor(e){const t=[];for(let e=0;e<20;e++){const e=[];for(let t=0;t<10;t++)e.push("black");t.push(e)}this.gameBoard=t,this.currentPiece=null,this.droppedPieces=[],this.stage=e,this.gameOver=!1,this.currentScore=0}render(){this.stage.removeAllChildren(),this.gameBoard.forEach(((e,t)=>{e.forEach(((e,r)=>{const o=new createjs.Shape;o.graphics.beginFill(e).drawRect(30*r,30*t,30,30),this.stage.addChild(o)}))})),this.stage.update()}updateGrid(){this.currentPiece.coordinates.forEach((e=>{const{row:t,column:r}=e;this.gameBoard[t][r]=this.currentPiece.color}))}startGame(){this.createNewPiece()}isCurrentPieceStuck(){return!this.currentPiece.validMoveDown(this.gameBoard)}createNewPiece(){const t=new e;this.currentPiece=t,this.droppedPieces.push(t)}calculateCompletedRows(){const e=[];return this.gameBoard.forEach(((t,r)=>{t.every((e=>"black"!==e))&&e.push(r)})),e}calculateScore(){const e=this.calculateCompletedRows().length,t=e<4?100*e:200*e;this.currentScore+=t}clearGameBoardRows(e){e.forEach((e=>{this.gameBoard[e]=new Array(10).fill("black")}))}clearOldTetrominoPosition(){this.currentPiece.coordinates.forEach((e=>{const{row:t,column:r}=e;this.gameBoard[t][r]="black"}))}checkGameOver(){this.currentPiece.coordinates.filter((e=>e.side.includes("top"))).forEach((e=>{const{row:t}=e;this.isCurrentPieceStuck()&&0===t&&(this.gameOver=!0)}))}currentPieceDefaultMove(){setInterval((()=>{this.isCurrentPieceStuck()?this.createNewPiece():(this.clearOldTetrominoPosition(),this.currentPiece.moveDown(),this.updateGrid(),this.render())}),500)}executeMove(e){39===e.keyCode&&this.currentPiece.validMoveRight()?(this.clearOldTetrominoPosition(),this.currentPiece.moveRight()):37===e.keyCode&&this.currentPiece.validMoveLeft()?(this.clearOldTetrominoPosition(),this.currentPiece.moveLeft()):40===e.keyCode&&this.currentPiece.validMoveDown(this.gameBoard)&&(this.clearOldTetrominoPosition(),this.currentPiece.moveDown()),this.updateGrid(),this.render()}handleCurrentPieceStuck(){if(this.isCurrentPieceStuck()){const e=this.calculateCompletedRows();e.length>0&&(this.droppedPieces.forEach((t=>{t.clearCoordinates(e)})),this.calculateScore(),this.clearGameBoardRows(e)),this.createNewPiece(),this.updateGrid(),setTimeout((()=>{this.render()}),300),console.log(this)}}}let r,o;const i=()=>{o=new createjs.Stage("tetris"),r=new t(o),r.startGame();const e=new createjs.Shape;e.graphics.beginFill("#000000").drawRect(0,0,300,600),o.addChild(e),r.updateGrid(),r.render(),r.currentPieceDefaultMove(),r.calculateScore();const i=document.createElement("h1"),c=document.createTextNode(`Score: ${r.currentScore}`);i.appendChild(c),document.body.appendChild(i),console.log(r)};document.addEventListener("keydown",(e=>{if(e.preventDefault(),r.gameOver){const e=document.createElement("h1"),t=document.createTextNode("GAME OVER");e.appendChild(t),document.body.appendChild(e);const r=document.createElement("button");return r.innerHTML="RESTART GAME",r.addEventListener("click",(()=>{i(),e.removeChild(t),document.body.removeChild(r)})),void document.body.appendChild(r)}r.executeMove(e),r.handleCurrentPieceStuck(),r.checkGameOver()})),window.onload=i})();