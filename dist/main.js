(()=>{"use strict";class e{constructor(){this.coordinates=[{row:0,column:0},{row:0,column:1},{row:1,column:0},{row:1,column:1}],this.color="yellow"}moveDown(){this.coordinates.forEach((e=>{e.row++}))}moveRight(){this.coordinates.forEach((e=>{e.column++}))}moveLeft(){this.coordinates.forEach((e=>{e.column--}))}rotateRight(){}rotateLeft(){}}const o=new class{constructor(){const e=[];for(let o=0;o<20;o++){const o=[];for(let e=0;e<10;e++)o.push("black");e.push(o)}this.gameBoard=e,this.currentPiece=null,this.droppedPieces=[]}startGame(){const o=new e;this.currentPiece=o,this.droppedPieces.push(o)}};o.startGame();const c=new createjs.Stage("tetris"),t=()=>{o.currentPiece.coordinates.forEach((e=>{const{row:c,column:t}=e;o.gameBoard[c][t]=o.currentPiece.color}))},r=()=>{o.currentPiece.coordinates.forEach((e=>{const{row:c,column:t}=e;o.gameBoard[c][t]="black"}))},a=()=>{o.gameBoard.forEach(((e,o)=>{e.forEach(((e,t)=>{const r=new createjs.Shape;r.graphics.beginFill(e).drawRect(30*t,30*o,30,30),c.addChild(r)}))})),c.update()};document.addEventListener("keydown",(e=>{switch(e.preventDefault(),e.keyCode){case 37:r(),o.currentPiece.moveLeft();break;case 39:r(),o.currentPiece.moveRight();break;case 40:r(),o.currentPiece.moveDown()}t(),a()})),window.onload=()=>{const e=new createjs.Shape;e.graphics.beginFill("#000000").drawRect(0,0,300,600),c.addChild(e),t(),a()}})();