(()=>{"use strict";class e{constructor(){this.coordinates=[{row:0,column:4,side:["top","left"]},{row:0,column:5,side:["top","right"]},{row:1,column:4,side:["bottom","left"]},{row:1,column:5,side:["bottom","right"]}],this.color="yellow"}moveDown(){this.coordinates.forEach((e=>{e.row++}))}moveRight(){this.coordinates.forEach((e=>{e.column++}))}moveLeft(){this.coordinates.forEach((e=>{e.column--}))}rotateRight(){}rotateLeft(){}validMoveRight(){return this.coordinates.filter((e=>e.side.includes("right"))).every((e=>{const{column:t}=e;return t+1<=9}))}validMoveLeft(){return this.coordinates.filter((e=>e.side.includes("left"))).every((e=>{const{column:t}=e;return t-1>=0}))}validMoveDown(e){return this.coordinates.filter((e=>e.side.includes("bottom"))).every((t=>{const{row:o,column:r}=t,i=o+1;if(i<=19)return"black"===e[i][r]}))}clearCoordinates(e){this.coordinates=this.coordinates.filter((t=>{const{row:o}=t;return!e.includes(o)}))}}class t{constructor(e){const t=[];for(let e=0;e<20;e++){const e=[];for(let t=0;t<10;t++)e.push("black");t.push(e)}this.gameBoard=t,this.currentPiece=null,this.droppedPieces=[],this.stage=e,this.gameOver=!1}render(){this.stage.removeAllChildren(),this.gameBoard.forEach(((e,t)=>{e.forEach(((e,o)=>{const r=new createjs.Shape;r.graphics.beginFill(e).drawRect(30*o,30*t,30,30),this.stage.addChild(r)}))})),this.stage.update()}updateGrid(){this.currentPiece.coordinates.forEach((e=>{const{row:t,column:o}=e;this.gameBoard[t][o]=this.currentPiece.color}))}startGame(){this.createNewPiece()}isCurrentPieceStuck(){return!this.currentPiece.validMoveDown(this.gameBoard)}createNewPiece(){const t=new e;this.currentPiece=t,this.droppedPieces.push(t)}calculateCompletedRows(){const e=[];return this.gameBoard.forEach(((t,o)=>{t.every((e=>"black"!==e))&&e.push(o)})),e}clearGameBoardRows(e){e.forEach((e=>{this.gameBoard[e]=new Array(10).fill("black")}))}clearOldTetrominoPosition(){this.currentPiece.coordinates.forEach((e=>{const{row:t,column:o}=e;this.gameBoard[t][o]="black"}))}checkGameOver(){this.currentPiece.coordinates.filter((e=>e.side.includes("top"))).forEach((e=>{const{row:t}=e;this.isCurrentPieceStuck()&&0===t&&(this.gameOver=!0)}))}}let o,r;const i=()=>{r=new createjs.Stage("tetris"),o=new t(r),o.startGame();const e=new createjs.Shape;e.graphics.beginFill("#000000").drawRect(0,0,300,600),r.addChild(e),o.updateGrid(),o.render(),console.log(o)};setInterval((()=>{o.currentPiece.validMoveDown(o.gameBoard)&&(o.clearOldTetrominoPosition(),o.currentPiece.moveDown(),o.updateGrid(),o.render())}),500),document.addEventListener("keydown",(e=>{if(e.preventDefault(),o.gameOver){const e=document.createElement("h1"),t=document.createTextNode("GAME OVER");e.appendChild(t),document.body.appendChild(e);const o=document.createElement("button");return o.innerHTML="RESTART GAME",o.addEventListener("click",(()=>{i(),e.removeChild(t),document.body.removeChild(o)})),void document.body.appendChild(o)}if(39===e.keyCode&&o.currentPiece.validMoveRight()?(o.clearOldTetrominoPosition(),o.currentPiece.moveRight()):37===e.keyCode&&o.currentPiece.validMoveLeft()?(o.clearOldTetrominoPosition(),o.currentPiece.moveLeft()):40===e.keyCode&&o.currentPiece.validMoveDown(o.gameBoard)&&(o.clearOldTetrominoPosition(),o.currentPiece.moveDown()),o.updateGrid(),o.render(),o.isCurrentPieceStuck()){const e=o.calculateCompletedRows();e.length>0&&(o.droppedPieces.forEach((t=>{t.clearCoordinates(e)})),o.clearGameBoardRows(e)),o.createNewPiece(),o.updateGrid(),setTimeout((()=>{o.render()}),300),console.log(o)}o.checkGameOver()})),window.onload=i})();